// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: calculator/v1/calculator.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request and response messages for Add operation
type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             float64                `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B             float64                `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *AddRequest) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

type AddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        float64                `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{1}
}

func (x *AddResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request and response messages for Subtract operation
type SubtractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             float64                `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B             float64                `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubtractRequest) Reset() {
	*x = SubtractRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtractRequest) ProtoMessage() {}

func (x *SubtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtractRequest.ProtoReflect.Descriptor instead.
func (*SubtractRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{2}
}

func (x *SubtractRequest) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *SubtractRequest) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

type SubtractResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        float64                `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubtractResponse) Reset() {
	*x = SubtractResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubtractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtractResponse) ProtoMessage() {}

func (x *SubtractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtractResponse.ProtoReflect.Descriptor instead.
func (*SubtractResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{3}
}

func (x *SubtractResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request and response messages for Multiply operation
type MultiplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             float64                `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B             float64                `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplyRequest) Reset() {
	*x = MultiplyRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyRequest) ProtoMessage() {}

func (x *MultiplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyRequest.ProtoReflect.Descriptor instead.
func (*MultiplyRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{4}
}

func (x *MultiplyRequest) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *MultiplyRequest) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

type MultiplyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        float64                `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplyResponse) Reset() {
	*x = MultiplyResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyResponse) ProtoMessage() {}

func (x *MultiplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyResponse.ProtoReflect.Descriptor instead.
func (*MultiplyResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{5}
}

func (x *MultiplyResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request and response messages for Divide operation
type DivideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             float64                `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B             float64                `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DivideRequest) Reset() {
	*x = DivideRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideRequest) ProtoMessage() {}

func (x *DivideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideRequest.ProtoReflect.Descriptor instead.
func (*DivideRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{6}
}

func (x *DivideRequest) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *DivideRequest) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

type DivideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        float64                `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DivideResponse) Reset() {
	*x = DivideResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideResponse) ProtoMessage() {}

func (x *DivideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideResponse.ProtoReflect.Descriptor instead.
func (*DivideResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{7}
}

func (x *DivideResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request and response messages for Factorial operation (server streaming)
type FactorialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FactorialRequest) Reset() {
	*x = FactorialRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FactorialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FactorialRequest) ProtoMessage() {}

func (x *FactorialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FactorialRequest.ProtoReflect.Descriptor instead.
func (*FactorialRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{8}
}

func (x *FactorialRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type FactorialResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Step          int32                  `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"`
	Result        int64                  `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FactorialResponse) Reset() {
	*x = FactorialResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FactorialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FactorialResponse) ProtoMessage() {}

func (x *FactorialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FactorialResponse.ProtoReflect.Descriptor instead.
func (*FactorialResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{9}
}

func (x *FactorialResponse) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *FactorialResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request and response messages for Sum operation (client streaming)
type SumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        float64                `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumRequest) Reset() {
	*x = SumRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumRequest) ProtoMessage() {}

func (x *SumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumRequest.ProtoReflect.Descriptor instead.
func (*SumRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{10}
}

func (x *SumRequest) GetNumber() float64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type SumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         float64                `protobuf:"fixed64,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumResponse) Reset() {
	*x = SumResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumResponse) ProtoMessage() {}

func (x *SumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumResponse.ProtoReflect.Descriptor instead.
func (*SumResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{11}
}

func (x *SumResponse) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Request and response messages for RunningAverage operation (bidirectional streaming)
type RunningAverageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        float64                `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunningAverageRequest) Reset() {
	*x = RunningAverageRequest{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunningAverageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningAverageRequest) ProtoMessage() {}

func (x *RunningAverageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningAverageRequest.ProtoReflect.Descriptor instead.
func (*RunningAverageRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{12}
}

func (x *RunningAverageRequest) GetNumber() float64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type RunningAverageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Average       float64                `protobuf:"fixed64,1,opt,name=average,proto3" json:"average,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunningAverageResponse) Reset() {
	*x = RunningAverageResponse{}
	mi := &file_calculator_v1_calculator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunningAverageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningAverageResponse) ProtoMessage() {}

func (x *RunningAverageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningAverageResponse.ProtoReflect.Descriptor instead.
func (*RunningAverageResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_proto_rawDescGZIP(), []int{13}
}

func (x *RunningAverageResponse) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *RunningAverageResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_calculator_v1_calculator_proto protoreflect.FileDescriptor

const file_calculator_v1_calculator_proto_rawDesc = "" +
	"\n" +
	"\x1ecalculator/v1/calculator.proto\x12\rcalculator.v1\"(\n" +
	"\n" +
	"AddRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x01R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x01R\x01b\"%\n" +
	"\vAddResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x01R\x06result\"-\n" +
	"\x0fSubtractRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x01R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x01R\x01b\"*\n" +
	"\x10SubtractResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x01R\x06result\"-\n" +
	"\x0fMultiplyRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x01R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x01R\x01b\"*\n" +
	"\x10MultiplyResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x01R\x06result\"+\n" +
	"\rDivideRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x01R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x01R\x01b\"(\n" +
	"\x0eDivideResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x01R\x06result\"*\n" +
	"\x10FactorialRequest\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\"?\n" +
	"\x11FactorialResponse\x12\x12\n" +
	"\x04step\x18\x01 \x01(\x05R\x04step\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x03R\x06result\"$\n" +
	"\n" +
	"SumRequest\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x01R\x06number\"#\n" +
	"\vSumResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x01R\x05total\"/\n" +
	"\x15RunningAverageRequest\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x01R\x06number\"H\n" +
	"\x16RunningAverageResponse\x12\x18\n" +
	"\aaverage\x18\x01 \x01(\x01R\aaverage\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count2\xa7\x04\n" +
	"\x11CalculatorService\x12<\n" +
	"\x03Add\x12\x19.calculator.v1.AddRequest\x1a\x1a.calculator.v1.AddResponse\x12K\n" +
	"\bSubtract\x12\x1e.calculator.v1.SubtractRequest\x1a\x1f.calculator.v1.SubtractResponse\x12K\n" +
	"\bMultiply\x12\x1e.calculator.v1.MultiplyRequest\x1a\x1f.calculator.v1.MultiplyResponse\x12E\n" +
	"\x06Divide\x12\x1c.calculator.v1.DivideRequest\x1a\x1d.calculator.v1.DivideResponse\x12P\n" +
	"\tFactorial\x12\x1f.calculator.v1.FactorialRequest\x1a .calculator.v1.FactorialResponse0\x01\x12>\n" +
	"\x03Sum\x12\x19.calculator.v1.SumRequest\x1a\x1a.calculator.v1.SumResponse(\x01\x12a\n" +
	"\x0eRunningAverage\x12$.calculator.v1.RunningAverageRequest\x1a%.calculator.v1.RunningAverageResponse(\x010\x01BBZ@github.com/jasoet/grpc-learn/pkg/grpc/examples/gen/calculator/v1b\x06proto3"

var (
	file_calculator_v1_calculator_proto_rawDescOnce sync.Once
	file_calculator_v1_calculator_proto_rawDescData []byte
)

func file_calculator_v1_calculator_proto_rawDescGZIP() []byte {
	file_calculator_v1_calculator_proto_rawDescOnce.Do(func() {
		file_calculator_v1_calculator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calculator_v1_calculator_proto_rawDesc), len(file_calculator_v1_calculator_proto_rawDesc)))
	})
	return file_calculator_v1_calculator_proto_rawDescData
}

var file_calculator_v1_calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_calculator_v1_calculator_proto_goTypes = []any{
	(*AddRequest)(nil),             // 0: calculator.v1.AddRequest
	(*AddResponse)(nil),            // 1: calculator.v1.AddResponse
	(*SubtractRequest)(nil),        // 2: calculator.v1.SubtractRequest
	(*SubtractResponse)(nil),       // 3: calculator.v1.SubtractResponse
	(*MultiplyRequest)(nil),        // 4: calculator.v1.MultiplyRequest
	(*MultiplyResponse)(nil),       // 5: calculator.v1.MultiplyResponse
	(*DivideRequest)(nil),          // 6: calculator.v1.DivideRequest
	(*DivideResponse)(nil),         // 7: calculator.v1.DivideResponse
	(*FactorialRequest)(nil),       // 8: calculator.v1.FactorialRequest
	(*FactorialResponse)(nil),      // 9: calculator.v1.FactorialResponse
	(*SumRequest)(nil),             // 10: calculator.v1.SumRequest
	(*SumResponse)(nil),            // 11: calculator.v1.SumResponse
	(*RunningAverageRequest)(nil),  // 12: calculator.v1.RunningAverageRequest
	(*RunningAverageResponse)(nil), // 13: calculator.v1.RunningAverageResponse
}
var file_calculator_v1_calculator_proto_depIdxs = []int32{
	0,  // 0: calculator.v1.CalculatorService.Add:input_type -> calculator.v1.AddRequest
	2,  // 1: calculator.v1.CalculatorService.Subtract:input_type -> calculator.v1.SubtractRequest
	4,  // 2: calculator.v1.CalculatorService.Multiply:input_type -> calculator.v1.MultiplyRequest
	6,  // 3: calculator.v1.CalculatorService.Divide:input_type -> calculator.v1.DivideRequest
	8,  // 4: calculator.v1.CalculatorService.Factorial:input_type -> calculator.v1.FactorialRequest
	10, // 5: calculator.v1.CalculatorService.Sum:input_type -> calculator.v1.SumRequest
	12, // 6: calculator.v1.CalculatorService.RunningAverage:input_type -> calculator.v1.RunningAverageRequest
	1,  // 7: calculator.v1.CalculatorService.Add:output_type -> calculator.v1.AddResponse
	3,  // 8: calculator.v1.CalculatorService.Subtract:output_type -> calculator.v1.SubtractResponse
	5,  // 9: calculator.v1.CalculatorService.Multiply:output_type -> calculator.v1.MultiplyResponse
	7,  // 10: calculator.v1.CalculatorService.Divide:output_type -> calculator.v1.DivideResponse
	9,  // 11: calculator.v1.CalculatorService.Factorial:output_type -> calculator.v1.FactorialResponse
	11, // 12: calculator.v1.CalculatorService.Sum:output_type -> calculator.v1.SumResponse
	13, // 13: calculator.v1.CalculatorService.RunningAverage:output_type -> calculator.v1.RunningAverageResponse
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_calculator_v1_calculator_proto_init() }
func file_calculator_v1_calculator_proto_init() {
	if File_calculator_v1_calculator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calculator_v1_calculator_proto_rawDesc), len(file_calculator_v1_calculator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculator_v1_calculator_proto_goTypes,
		DependencyIndexes: file_calculator_v1_calculator_proto_depIdxs,
		MessageInfos:      file_calculator_v1_calculator_proto_msgTypes,
	}.Build()
	File_calculator_v1_calculator_proto = out.File
	file_calculator_v1_calculator_proto_goTypes = nil
	file_calculator_v1_calculator_proto_depIdxs = nil
}
